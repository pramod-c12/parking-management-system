name: CI/CD Pipeline

   on:
     push:
       branches: [ main ]
     pull_request:
       branches: [ main ]

   jobs:
     frontend-ci:
       runs-on: ubuntu-latest
       steps:
         - uses: actions/checkout@v4
         - name: Set up Node.js
           uses: actions/setup-node@v4
           with:
             node-version: '20'
         - name: Install Frontend Dependencies
           run: |
             cd parking-frontend
             npm ci
         - name: Run Frontend Tests
           run: |
             cd parking-frontend
             npm test
         - name: Build Frontend
           run: |
             cd parking-frontend
             npm run build

     backend-ci:
       runs-on: ubuntu-latest
       steps:
         - uses: actions/checkout@v4
         - name: Set up Node.js
           uses: actions/setup-node@v4
           with:
             node-version: '20'
         - name: Install Backend Dependencies
           run: |
             npm ci
         - name: Run Backend Tests
           run: |
             npm test
           env:
             DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
             JWT_SECRET: ${{ secrets.JWT_SECRET }}

     deploy-frontend:
       needs: frontend-ci
       runs-on: ubuntu-latest
       if: github.event_name == 'push' && github.ref == 'refs/heads/main'
       steps:
         - uses: actions/checkout@v4
         - name: Deploy to Vercel
           uses: amondnet/vercel-action@v25
           with:
             vercel-token: ${{ secrets.VERCEL_TOKEN }}
             vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
             vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
             working-directory: ./parking-frontend

     deploy-backend:
       needs: backend-ci
       runs-on: ubuntu-latest
       if: github.event_name == 'push' && github.ref == 'refs/heads/main'
       steps:
         - uses: actions/checkout@v4
         - name: Deploy to Render
           uses: johnbeynon/render-deploy-action@v0.0.8
           with:
             service-id: ${{ secrets.RENDER_SERVICE_ID }}
             api-key: ${{ secrets.RENDER_API_KEY }}
             wait-for-success: true